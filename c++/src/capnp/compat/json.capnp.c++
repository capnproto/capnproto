// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: json.capnp

#include "json.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<137> b_a3fa7845f919dd83 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
     24,   0,   0,   0,   1,   0,   2,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      1,   0,   7,   0,   0,   0,   7,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     86,  97, 108, 117, 101,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    223, 157, 214,  53, 231,  38,  16, 227,
      9,   0,   0,   0,  50,   0,   0,   0,
     72,  61, 201, 161, 236, 246, 217, 160,
      5,   0,   0,   0,  42,   0,   0,   0,
     70, 105, 101, 108, 100,   0,   0,   0,
     67,  97, 108, 108,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,  16,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 108, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 111, 108, 101,  97, 110,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 114,  97, 121,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    223, 157, 214,  53, 231,  38,  16, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 108, 108,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     72,  61, 201, 161, 236, 246, 217, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a3fa7845f919dd83 = b_a3fa7845f919dd83.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a3fa7845f919dd83[] = {
  &s_a0d9f6eca1c93d48,
  &s_a3fa7845f919dd83,
  &s_e31026e735d69ddf,
};
static const uint16_t m_a3fa7845f919dd83[] = {4, 1, 6, 0, 2, 5, 3};
static const uint16_t i_a3fa7845f919dd83[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_a3fa7845f919dd83 = {
  0xa3fa7845f919dd83, b_a3fa7845f919dd83.words, 137, d_a3fa7845f919dd83, m_a3fa7845f919dd83,
  3, 7, i_a3fa7845f919dd83, nullptr, nullptr, { &s_a3fa7845f919dd83, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_e31026e735d69ddf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    223, 157, 214,  53, 231,  38,  16, 227,
     30,   0,   0,   0,   1,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     86,  97, 108, 117, 101,  46,  70, 105,
    101, 108, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e31026e735d69ddf = b_e31026e735d69ddf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e31026e735d69ddf[] = {
  &s_a3fa7845f919dd83,
};
static const uint16_t m_e31026e735d69ddf[] = {0, 1};
static const uint16_t i_e31026e735d69ddf[] = {0, 1};
const ::capnp::_::RawSchema s_e31026e735d69ddf = {
  0xe31026e735d69ddf, b_e31026e735d69ddf.words, 49, d_e31026e735d69ddf, m_e31026e735d69ddf,
  1, 2, i_e31026e735d69ddf, nullptr, nullptr, { &s_e31026e735d69ddf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_a0d9f6eca1c93d48 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     72,  61, 201, 161, 236, 246, 217, 160,
     30,   0,   0,   0,   1,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     86,  97, 108, 117, 101,  46,  67,  97,
    108, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    102, 117, 110,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0d9f6eca1c93d48 = b_a0d9f6eca1c93d48.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a0d9f6eca1c93d48[] = {
  &s_a3fa7845f919dd83,
};
static const uint16_t m_a0d9f6eca1c93d48[] = {0, 1};
static const uint16_t i_a0d9f6eca1c93d48[] = {0, 1};
const ::capnp::_::RawSchema s_a0d9f6eca1c93d48 = {
  0xa0d9f6eca1c93d48, b_a0d9f6eca1c93d48.words, 54, d_a0d9f6eca1c93d48, m_a0d9f6eca1c93d48,
  1, 2, i_a0d9f6eca1c93d48, nullptr, nullptr, { &s_a0d9f6eca1c93d48, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_fa5b1fd61c2e7c3d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
     24,   0,   0,   0,   5,   0, 232,   2,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    110,  97, 109, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fa5b1fd61c2e7c3d = b_fa5b1fd61c2e7c3d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fa5b1fd61c2e7c3d = {
  0xfa5b1fd61c2e7c3d, b_fa5b1fd61c2e7c3d.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fa5b1fd61c2e7c3d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_82d3e852af0336bf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
     24,   0,   0,   0,   5,   0, 224,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    102, 108,  97, 116, 116, 101, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     97, 234, 194, 123,  37,  19, 223, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82d3e852af0336bf = b_82d3e852af0336bf.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_82d3e852af0336bf = {
  0x82d3e852af0336bf, b_82d3e852af0336bf.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_82d3e852af0336bf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_c4df13257bc2ea61 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     97, 234, 194, 123,  37,  19, 223, 196,
     24,   0,   0,   0,   1,   0,   0,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     70, 108,  97, 116, 116, 101, 110,  79,
    112, 116, 105, 111, 110, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 101, 102, 105, 120,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c4df13257bc2ea61 = b_c4df13257bc2ea61.words;
#if !CAPNP_LITE
static const uint16_t m_c4df13257bc2ea61[] = {0};
static const uint16_t i_c4df13257bc2ea61[] = {0};
const ::capnp::_::RawSchema s_c4df13257bc2ea61 = {
  0xc4df13257bc2ea61, b_c4df13257bc2ea61.words, 35, nullptr, m_c4df13257bc2ea61,
  0, 1, i_c4df13257bc2ea61, nullptr, nullptr, { &s_c4df13257bc2ea61, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<22> b_cfa794e8d19a0162 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     98,   1, 154, 209, 232, 148, 167, 207,
     24,   0,   0,   0,   5,   0,  80,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    100, 105, 115,  99, 114, 105, 109, 105,
    110,  97, 116, 111, 114,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     25,  83,  62,  41,  12, 194, 248, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cfa794e8d19a0162 = b_cfa794e8d19a0162.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cfa794e8d19a0162 = {
  0xcfa794e8d19a0162, b_cfa794e8d19a0162.words, 22, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cfa794e8d19a0162, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_c2f8c20c293e5319 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25,  83,  62,  41,  12, 194, 248, 194,
     24,   0,   0,   0,   1,   0,   0,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     68, 105, 115,  99, 114, 105, 109, 105,
    110,  97, 116, 111, 114,  79, 112, 116,
    105, 111, 110, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c2f8c20c293e5319 = b_c2f8c20c293e5319.words;
#if !CAPNP_LITE
static const uint16_t m_c2f8c20c293e5319[] = {0, 1};
static const uint16_t i_c2f8c20c293e5319[] = {0, 1};
const ::capnp::_::RawSchema s_c2f8c20c293e5319 = {
  0xc2f8c20c293e5319, b_c2f8c20c293e5319.words, 51, nullptr, m_c2f8c20c293e5319,
  0, 2, i_c2f8c20c293e5319, nullptr, nullptr, { &s_c2f8c20c293e5319, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_d7d879450a253e4b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     75,  62,  37,  10,  69, 121, 216, 215,
     24,   0,   0,   0,   5,   0,  32,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     98,  97, 115, 101,  54,  52,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d7d879450a253e4b = b_d7d879450a253e4b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d7d879450a253e4b = {
  0xd7d879450a253e4b, b_d7d879450a253e4b.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d7d879450a253e4b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_f061e22f0ae5c7b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
     24,   0,   0,   0,   5,   0,  32,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    104, 101, 120,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f061e22f0ae5c7b5 = b_f061e22f0ae5c7b5.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f061e22f0ae5c7b5 = {
  0xf061e22f0ae5c7b5, b_f061e22f0ae5c7b5.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f061e22f0ae5c7b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<22> b_a0a054dea32fd98c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    140, 217,  47, 163, 222,  84, 160, 160,
     24,   0,   0,   0,   5,   0,   0,   2,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    110, 111, 116, 105, 102, 105,  99,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0a054dea32fd98c = b_a0a054dea32fd98c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a0a054dea32fd98c = {
  0xa0a054dea32fd98c, b_a0a054dea32fd98c.words, 22, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a0a054dea32fd98c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnp {
namespace json {

// Value
constexpr uint16_t Value::_capnpPrivate::dataWordSize;
constexpr uint16_t Value::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Value::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Value::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Value::Field
constexpr uint16_t Value::Field::_capnpPrivate::dataWordSize;
constexpr uint16_t Value::Field::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Value::Field::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Value::Field::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Value::Call
constexpr uint16_t Value::Call::_capnpPrivate::dataWordSize;
constexpr uint16_t Value::Call::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Value::Call::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Value::Call::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FlattenOptions
constexpr uint16_t FlattenOptions::_capnpPrivate::dataWordSize;
constexpr uint16_t FlattenOptions::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FlattenOptions::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FlattenOptions::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// DiscriminatorOptions
constexpr uint16_t DiscriminatorOptions::_capnpPrivate::dataWordSize;
constexpr uint16_t DiscriminatorOptions::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DiscriminatorOptions::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DiscriminatorOptions::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

