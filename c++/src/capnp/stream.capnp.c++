// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: stream.capnp

#include "stream.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<17> b_995f9a3377c0b16e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    110, 177, 192, 119,  51, 154,  95, 153,
     19,   0,   0,   0,   1,   0,   0,   0,
    248, 243, 147,  19, 169, 102, 195, 134,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 115, 116,
    114, 101,  97, 109,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 114, 101,  97,
    109,  82, 101, 115, 117, 108, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_995f9a3377c0b16e = b_995f9a3377c0b16e.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_995f9a3377c0b16e = {
  0x995f9a3377c0b16e, b_995f9a3377c0b16e.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_995f9a3377c0b16e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnp {

// StreamResult
constexpr uint16_t StreamResult::_capnpPrivate::dataWordSize;
constexpr uint16_t StreamResult::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind StreamResult::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StreamResult::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

