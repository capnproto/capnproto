// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: persistent.capnp

#include "persistent.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_c8cb212fcd9f5691 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145,  86, 159, 205,  47,  33, 203, 200,
     23,   0,   0,   0,   3,   0,   0,   0,
    215, 238,  63, 152,  54,   8,  99, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  71,   0,   0,   0,
    145,   0,   0,   0,   7,   0,   0,   0,
    145,   0,   0,   0,  23,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 112, 101,
    114, 115, 105, 115, 116, 101, 110, 116,
     46,  99,  97, 112, 110, 112,  58,  80,
    101, 114, 115, 105, 115, 116, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    165, 115,  48,  24,  89, 186, 111, 247,
      9,   0,   0,   0,  90,   0,   0,   0,
    191, 239,  64, 140, 193,  72, 104, 183,
      9,   0,   0,   0,  98,   0,   0,   0,
     83,  97, 118, 101,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     83,  97, 118, 101,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165, 115,  48,  24,  89, 186, 111, 247,
    191, 239,  64, 140, 193,  72, 104, 183,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
    115,  97, 118, 101,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    145,  86, 159, 205,  47,  33, 203, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    145,  86, 159, 205,  47,  33, 203, 200,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   1,   0,
      5,   0,   0,   0,  82,   0,   0,   0,
      9,   0,   0,   0,  50,   0,   0,   0,
     83, 116, 117, 114, 100, 121,  82, 101,
    102,   0,   0,   0,   0,   0,   0,   0,
     79, 119, 110, 101, 114,   0,   0,   0, }
};
::capnp::word const* const bp_c8cb212fcd9f5691 = b_c8cb212fcd9f5691.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c8cb212fcd9f5691[] = {
  &s_b76848c18c40efbf,
  &s_f76fba59183073a5,
};
static const uint16_t m_c8cb212fcd9f5691[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_c8cb212fcd9f5691[] = {
  { 33554432,  ::capnp::Persistent< ::capnp::AnyPointer,  ::capnp::AnyPointer>::SaveParams::_capnpPrivate::brand() },
  { 50331648,  ::capnp::Persistent< ::capnp::AnyPointer,  ::capnp::AnyPointer>::SaveResults::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_c8cb212fcd9f5691 = {
  0xc8cb212fcd9f5691, b_c8cb212fcd9f5691.words, 54, d_c8cb212fcd9f5691, m_c8cb212fcd9f5691,
  2, 1, nullptr, nullptr, nullptr, { &s_c8cb212fcd9f5691, nullptr, bd_c8cb212fcd9f5691, 0, sizeof(bd_c8cb212fcd9f5691) / sizeof(bd_c8cb212fcd9f5691[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_f76fba59183073a5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    165, 115,  48,  24,  89, 186, 111, 247,
     34,   0,   0,   0,   1,   0,   0,   0,
    145,  86, 159, 205,  47,  33, 203, 200,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 112, 101,
    114, 115, 105, 115, 116, 101, 110, 116,
     46,  99,  97, 112, 110, 112,  58,  80,
    101, 114, 115, 105, 115, 116, 101, 110,
    116,  46,  83,  97, 118, 101,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 101,  97, 108,  70, 111, 114,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
    145,  86, 159, 205,  47,  33, 203, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f76fba59183073a5 = b_f76fba59183073a5.words;
#if !CAPNP_LITE
static const uint16_t m_f76fba59183073a5[] = {0};
static const uint16_t i_f76fba59183073a5[] = {0};
const ::capnp::_::RawSchema s_f76fba59183073a5 = {
  0xf76fba59183073a5, b_f76fba59183073a5.words, 35, nullptr, m_f76fba59183073a5,
  0, 1, i_f76fba59183073a5, nullptr, nullptr, { &s_f76fba59183073a5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_b76848c18c40efbf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    191, 239,  64, 140, 193,  72, 104, 183,
     34,   0,   0,   0,   1,   0,   0,   0,
    145,  86, 159, 205,  47,  33, 203, 200,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 112, 101,
    114, 115, 105, 115, 116, 101, 110, 116,
     46,  99,  97, 112, 110, 112,  58,  80,
    101, 114, 115, 105, 115, 116, 101, 110,
    116,  46,  83,  97, 118, 101,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 117, 114, 100, 121,  82, 101,
    102,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    145,  86, 159, 205,  47,  33, 203, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b76848c18c40efbf = b_b76848c18c40efbf.words;
#if !CAPNP_LITE
static const uint16_t m_b76848c18c40efbf[] = {0};
static const uint16_t i_b76848c18c40efbf[] = {0};
const ::capnp::_::RawSchema s_b76848c18c40efbf = {
  0xb76848c18c40efbf, b_b76848c18c40efbf.words, 36, nullptr, m_b76848c18c40efbf,
  0, 1, i_b76848c18c40efbf, nullptr, nullptr, { &s_b76848c18c40efbf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<22> b_f622595091cafb67 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103, 251, 202, 145,  80,  89,  34, 246,
     23,   0,   0,   0,   5,   0,  32,   1,
    215, 238,  63, 152,  54,   8,  99, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 112, 101,
    114, 115, 105, 115, 116, 101, 110, 116,
     46,  99,  97, 112, 110, 112,  58, 112,
    101, 114, 115, 105, 115, 116, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f622595091cafb67 = b_f622595091cafb67.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f622595091cafb67 = {
  0xf622595091cafb67, b_f622595091cafb67.words, 22, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f622595091cafb67, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp
